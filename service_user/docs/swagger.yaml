definitions:
  types.Column:
    properties:
      exp:
        description: expressions, which default to = when the value is null, have
          =, !=, >, >=, <, <=, like
        type: string
      logic:
        description: logical type, defaults to and when value is null, only &(and),
          ||(or)
        type: string
      name:
        description: column name
        type: string
      value:
        description: column value
    type: object
  types.Conditions:
    properties:
      columns:
        description: columns info
        items:
          $ref: '#/definitions/types.Column'
        type: array
    type: object
  types.CreateUserDeptAssocReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateUserDeptAssocRequest:
    properties:
      deptID:
        type: integer
      jobID:
        type: integer
      userID:
        type: integer
    type: object
  types.CreateUserDeptReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateUserDeptRequest:
    properties:
      deptName:
        type: string
      deptPath:
        type: string
    type: object
  types.CreateUserJobReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateUserJobRequest:
    properties:
      jobName:
        type: string
    type: object
  types.CreateUserReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          id:
            description: id
            type: integer
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.CreateUserRequest:
    properties:
      userName:
        description: The name of the user
        type: string
    type: object
  types.DeleteUserByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserDeptAssocByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserDeptAssocsByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserDeptAssocsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.DeleteUserDeptByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserDeptsByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserDeptsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.DeleteUserJobByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserJobsByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUserJobsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.DeleteUsersByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.DeleteUsersByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.GetUserByConditionReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          user:
            $ref: '#/definitions/types.UserObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          user:
            $ref: '#/definitions/types.UserObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserDeptAssocByConditionReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDeptAssoc:
            $ref: '#/definitions/types.UserDeptAssocObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserDeptAssocByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDeptAssoc:
            $ref: '#/definitions/types.UserDeptAssocObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserDeptByConditionReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDept:
            $ref: '#/definitions/types.UserDeptObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserDeptByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDept:
            $ref: '#/definitions/types.UserDeptObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserJobByConditionReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userJob:
            $ref: '#/definitions/types.UserJobObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.GetUserJobByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userJob:
            $ref: '#/definitions/types.UserJobObjDetail'
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserDeptAssocsByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDeptAssocs:
            items:
              $ref: '#/definitions/types.UserDeptAssocObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserDeptAssocsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.ListUserDeptAssocsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDeptAssocs:
            items:
              $ref: '#/definitions/types.UserDeptAssocObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserDeptsByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDepts:
            items:
              $ref: '#/definitions/types.UserDeptObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserDeptsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.ListUserDeptsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userDepts:
            items:
              $ref: '#/definitions/types.UserDeptObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserJobsByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userJobs:
            items:
              $ref: '#/definitions/types.UserJobObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUserJobsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.ListUserJobsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          userJobs:
            items:
              $ref: '#/definitions/types.UserJobObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUsersByIDsReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          users:
            items:
              $ref: '#/definitions/types.UserObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.ListUsersByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.ListUsersReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
        properties:
          users:
            items:
              $ref: '#/definitions/types.UserObjDetail'
            type: array
        type: object
      msg:
        description: return information description
        type: string
    type: object
  types.Params:
    properties:
      columns:
        description: query conditions
        items:
          $ref: '#/definitions/types.Column'
        type: array
      limit:
        description: lines per page
        type: integer
      page:
        description: page number, starting from page 0
        type: integer
      sort:
        description: sorted fields, multi-column sorting separated by commas
        type: string
    type: object
  types.UpdateUserByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateUserByIDRequest:
    properties:
      id:
        description: uint64 id
        type: integer
      userName:
        description: The name of the user
        type: string
    type: object
  types.UpdateUserDeptAssocByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateUserDeptAssocByIDRequest:
    properties:
      deptID:
        type: integer
      id:
        description: uint64 id
        type: integer
      jobID:
        type: integer
      userID:
        type: integer
    type: object
  types.UpdateUserDeptByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateUserDeptByIDRequest:
    properties:
      deptName:
        type: string
      deptPath:
        type: string
      id:
        description: uint64 id
        type: integer
    type: object
  types.UpdateUserJobByIDReply:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateUserJobByIDRequest:
    properties:
      id:
        description: uint64 id
        type: integer
      jobName:
        type: string
    type: object
  types.UserDeptAssocObjDetail:
    properties:
      deptID:
        type: integer
      id:
        description: convert to uint64 id
        type: integer
      jobID:
        type: integer
      userID:
        type: integer
    type: object
  types.UserDeptObjDetail:
    properties:
      deptName:
        type: string
      deptPath:
        type: string
      id:
        description: convert to uint64 id
        type: integer
    type: object
  types.UserJobObjDetail:
    properties:
      id:
        description: convert to uint64 id
        type: integer
      jobName:
        type: string
    type: object
  types.UserObjDetail:
    properties:
      id:
        description: convert to uint64 id
        type: integer
      userName:
        description: The name of the user
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: http server api docs
  title: service_user api docs
  version: "2.0"
paths:
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: submit information to create user
      parameters:
      - description: user information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateUserReply'
      security:
      - BearerAuth: []
      summary: create user
      tags:
      - user
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserByIDReply'
      security:
      - BearerAuth: []
      summary: delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get user detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserByIDReply'
      security:
      - BearerAuth: []
      summary: get user detail
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: user information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateUserByIDReply'
      security:
      - BearerAuth: []
      summary: update user
      tags:
      - user
  /api/v1/user/condition:
    post:
      consumes:
      - application/json
      description: get user by condition
      parameters:
      - description: query condition
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Conditions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserByConditionReply'
      security:
      - BearerAuth: []
      summary: get user by condition
      tags:
      - user
  /api/v1/user/delete/ids:
    post:
      consumes:
      - application/json
      description: delete users by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteUsersByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUsersByIDsReply'
      security:
      - BearerAuth: []
      summary: delete users
      tags:
      - user
  /api/v1/user/list:
    get:
      consumes:
      - application/json
      description: list of users by last id and limit
      parameters:
      - default: 0
        description: last id, default is MaxInt32
        in: query
        name: lastID
        required: true
        type: integer
      - default: 10
        description: number per page
        in: query
        name: limit
        type: integer
      - default: -id
        description: 'sort by column name of table, and the '
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUsersReply'
      security:
      - BearerAuth: []
      summary: list of users by last id and limit
      tags:
      - user
    post:
      consumes:
      - application/json
      description: list of users by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUsersReply'
      security:
      - BearerAuth: []
      summary: list of users by query parameters
      tags:
      - user
  /api/v1/user/list/ids:
    post:
      consumes:
      - application/json
      description: list of users by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.ListUsersByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUsersByIDsReply'
      security:
      - BearerAuth: []
      summary: list of users by batch id
      tags:
      - user
  /api/v1/userDept:
    post:
      consumes:
      - application/json
      description: submit information to create userDept
      parameters:
      - description: userDept information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserDeptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateUserDeptReply'
      security:
      - BearerAuth: []
      summary: create userDept
      tags:
      - userDept
  /api/v1/userDept/{id}:
    delete:
      consumes:
      - application/json
      description: delete userDept by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserDeptByIDReply'
      security:
      - BearerAuth: []
      summary: delete userDept
      tags:
      - userDept
    get:
      consumes:
      - application/json
      description: get userDept detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserDeptByIDReply'
      security:
      - BearerAuth: []
      summary: get userDept detail
      tags:
      - userDept
    put:
      consumes:
      - application/json
      description: update userDept information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: userDept information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserDeptByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateUserDeptByIDReply'
      security:
      - BearerAuth: []
      summary: update userDept
      tags:
      - userDept
  /api/v1/userDept/condition:
    post:
      consumes:
      - application/json
      description: get userDept by condition
      parameters:
      - description: query condition
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Conditions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserDeptByConditionReply'
      security:
      - BearerAuth: []
      summary: get userDept by condition
      tags:
      - userDept
  /api/v1/userDept/delete/ids:
    post:
      consumes:
      - application/json
      description: delete userDepts by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteUserDeptsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserDeptsByIDsReply'
      security:
      - BearerAuth: []
      summary: delete userDepts
      tags:
      - userDept
  /api/v1/userDept/list:
    get:
      consumes:
      - application/json
      description: list of userDepts by last id and limit
      parameters:
      - default: 0
        description: last id, default is MaxInt32
        in: query
        name: lastID
        required: true
        type: integer
      - default: 10
        description: number per page
        in: query
        name: limit
        type: integer
      - default: -id
        description: 'sort by column name of table, and the '
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserDeptsReply'
      security:
      - BearerAuth: []
      summary: list of userDepts by last id and limit
      tags:
      - userDept
    post:
      consumes:
      - application/json
      description: list of userDepts by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserDeptsReply'
      security:
      - BearerAuth: []
      summary: list of userDepts by query parameters
      tags:
      - userDept
  /api/v1/userDept/list/ids:
    post:
      consumes:
      - application/json
      description: list of userDepts by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.ListUserDeptsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserDeptsByIDsReply'
      security:
      - BearerAuth: []
      summary: list of userDepts by batch id
      tags:
      - userDept
  /api/v1/userDeptAssoc:
    post:
      consumes:
      - application/json
      description: submit information to create userDeptAssoc
      parameters:
      - description: userDeptAssoc information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserDeptAssocRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateUserDeptAssocReply'
      security:
      - BearerAuth: []
      summary: create userDeptAssoc
      tags:
      - userDeptAssoc
  /api/v1/userDeptAssoc/{id}:
    delete:
      consumes:
      - application/json
      description: delete userDeptAssoc by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserDeptAssocByIDReply'
      security:
      - BearerAuth: []
      summary: delete userDeptAssoc
      tags:
      - userDeptAssoc
    get:
      consumes:
      - application/json
      description: get userDeptAssoc detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserDeptAssocByIDReply'
      security:
      - BearerAuth: []
      summary: get userDeptAssoc detail
      tags:
      - userDeptAssoc
    put:
      consumes:
      - application/json
      description: update userDeptAssoc information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: userDeptAssoc information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserDeptAssocByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateUserDeptAssocByIDReply'
      security:
      - BearerAuth: []
      summary: update userDeptAssoc
      tags:
      - userDeptAssoc
  /api/v1/userDeptAssoc/condition:
    post:
      consumes:
      - application/json
      description: get userDeptAssoc by condition
      parameters:
      - description: query condition
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Conditions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserDeptAssocByConditionReply'
      security:
      - BearerAuth: []
      summary: get userDeptAssoc by condition
      tags:
      - userDeptAssoc
  /api/v1/userDeptAssoc/delete/ids:
    post:
      consumes:
      - application/json
      description: delete userDeptAssocs by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteUserDeptAssocsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserDeptAssocsByIDsReply'
      security:
      - BearerAuth: []
      summary: delete userDeptAssocs
      tags:
      - userDeptAssoc
  /api/v1/userDeptAssoc/list:
    get:
      consumes:
      - application/json
      description: list of userDeptAssocs by last id and limit
      parameters:
      - default: 0
        description: last id, default is MaxInt32
        in: query
        name: lastID
        required: true
        type: integer
      - default: 10
        description: number per page
        in: query
        name: limit
        type: integer
      - default: -id
        description: 'sort by column name of table, and the '
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserDeptAssocsReply'
      security:
      - BearerAuth: []
      summary: list of userDeptAssocs by last id and limit
      tags:
      - userDeptAssoc
    post:
      consumes:
      - application/json
      description: list of userDeptAssocs by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserDeptAssocsReply'
      security:
      - BearerAuth: []
      summary: list of userDeptAssocs by query parameters
      tags:
      - userDeptAssoc
  /api/v1/userDeptAssoc/list/ids:
    post:
      consumes:
      - application/json
      description: list of userDeptAssocs by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.ListUserDeptAssocsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserDeptAssocsByIDsReply'
      security:
      - BearerAuth: []
      summary: list of userDeptAssocs by batch id
      tags:
      - userDeptAssoc
  /api/v1/userJob:
    post:
      consumes:
      - application/json
      description: submit information to create userJob
      parameters:
      - description: userJob information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserJobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateUserJobReply'
      security:
      - BearerAuth: []
      summary: create userJob
      tags:
      - userJob
  /api/v1/userJob/{id}:
    delete:
      consumes:
      - application/json
      description: delete userJob by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserJobByIDReply'
      security:
      - BearerAuth: []
      summary: delete userJob
      tags:
      - userJob
    get:
      consumes:
      - application/json
      description: get userJob detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserJobByIDReply'
      security:
      - BearerAuth: []
      summary: get userJob detail
      tags:
      - userJob
    put:
      consumes:
      - application/json
      description: update userJob information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: userJob information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserJobByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateUserJobByIDReply'
      security:
      - BearerAuth: []
      summary: update userJob
      tags:
      - userJob
  /api/v1/userJob/condition:
    post:
      consumes:
      - application/json
      description: get userJob by condition
      parameters:
      - description: query condition
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Conditions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetUserJobByConditionReply'
      security:
      - BearerAuth: []
      summary: get userJob by condition
      tags:
      - userJob
  /api/v1/userJob/delete/ids:
    post:
      consumes:
      - application/json
      description: delete userJobs by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteUserJobsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DeleteUserJobsByIDsReply'
      security:
      - BearerAuth: []
      summary: delete userJobs
      tags:
      - userJob
  /api/v1/userJob/list:
    get:
      consumes:
      - application/json
      description: list of userJobs by last id and limit
      parameters:
      - default: 0
        description: last id, default is MaxInt32
        in: query
        name: lastID
        required: true
        type: integer
      - default: 10
        description: number per page
        in: query
        name: limit
        type: integer
      - default: -id
        description: 'sort by column name of table, and the '
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserJobsReply'
      security:
      - BearerAuth: []
      summary: list of userJobs by last id and limit
      tags:
      - userJob
    post:
      consumes:
      - application/json
      description: list of userJobs by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserJobsReply'
      security:
      - BearerAuth: []
      summary: list of userJobs by query parameters
      tags:
      - userJob
  /api/v1/userJob/list/ids:
    post:
      consumes:
      - application/json
      description: list of userJobs by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.ListUserJobsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ListUserJobsByIDsReply'
      security:
      - BearerAuth: []
      summary: list of userJobs by batch id
      tags:
      - userJob
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type Bearer your-jwt-token to Value
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
