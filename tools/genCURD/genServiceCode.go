package main

import (
	"fmt"
	"gogogo/pkg/util"
	"log"
	"os"
)

// 生成 curd 的 service 代码，包括 DO 和 DTO 的转换代码，基础 curd 的实现
const daoSvrPath = "internal/abandonCodeService/service/svc_AbandonCode.go"

func genServiceCode(
	tblToSvrMap map[string]*Table,
	tplTable *Table,
) {
	//以service为单位生成proto文件
	svcNameToTblMap := make(map[string][]*Table)
	for _, tbl := range tblToSvrMap {
		svcNameToTblMap[tbl.ServiceName] = append(svcNameToTblMap[tbl.ServiceName], tbl)
	}

	ctlTplBytes, err := os.ReadFile(daoSvrPath)
	if err != nil {
		log.Fatalf("read tpl file failed, err: %v", err)
	}

	for svcName, tblList := range svcNameToTblMap {
		ctlOutputPath := fmt.Sprintf("./internal/%vService/service/", svcName)
		os.MkdirAll(ctlOutputPath, 0755)

		for _, tbl := range tblList {
			log.Printf("gen svr code for tbl[%v]", tbl.Model.TableName())

			svcCodeStr := `// Code generated by tools/genCURD. DO NOT EDIT.` + "\n\n"

			ctlTplCode := string(ctlTplBytes)

			svcCodeStr += codeReplace(ctlTplCode, tplTable, tbl)

			if tbl.ServiceName != tbl.LowerCamelName {
				svcCodeStr = replaceMarkAll("MARK REPLACE SvrDefine", svcCodeStr, "")
			}
			do2dtoCode := ""
			for _, field := range tbl.FieldList {
				do2dtoCode += fmt.Sprintf(
					"        %v: do.%v,\n",
					util.StrToCamelCase(util.StrIdToLower(field.Name)),
					util.StrToCamelCase(field.Name))
			}
			svcCodeStr = replaceMarkAll("MARK REPLACE DO2DTO", svcCodeStr, do2dtoCode)

			dto2doCode := ""
			for _, field := range tbl.FieldList {
				dto2doCode += fmt.Sprintf(
					"        %v: dto.%v,\n",
					util.StrToCamelCase(field.Name),
					util.StrToCamelCase(util.StrIdToLower(field.Name)))
			}
			svcCodeStr = replaceMarkAll("MARK REPLACE DTO2DO", svcCodeStr, dto2doCode)

			err := os.WriteFile(ctlOutputPath+"svc_"+tbl.LowerCamelName+".gen.go", []byte(svcCodeStr), 0644)
			if err != nil {
				log.Fatalf("write dao code failed, err: %v", err)
			}
		}
	}
}
